#!/usr/bin/python
import sys,os
libPath=os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
sys.path.append(libPath)
import setting
from util.general import generateDateRange

import threading
import Queue

import memcache
import elasticsearch
import json
import datetime,time

connection = setting.ES_CONNECTION


def createManagementIndex(indexName):
	#indexName='2012-12-31' (for example)
	es = elasticsearch.Elasticsearch(connection)
	client=elasticsearch.client.IndicesClient(es)

	result=client.create(index=indexName,body={
		"settings" : {
			"refresh_interval":1
		},
		"mappings" : {
			"management": {
				"properties": {
					"timestamp": {
						"type":"date",
						"index":"not_analyzed"
					},
					"hostIP": {
						"type":"string",
						"index":"not_analyzed"
					},
					"domain":{
						"type":"string",
						"index":"not_analyzed"
					},
					"sessionID":{
						"type":"string",
						"index":"not_analyzed"
					},
					"message":{
						"type":"string",
						"index":"analyzed"
					}
				}
			}
		}
	})
	
	return result


	
if __name__ == "__main__":

	#print deleteIndex("2013-11-05-axigen")
	#print createNewIndex('2013-11-05-axigen')
	
	#print deleteIndex("mmgt-2013-11-21")

	if len(sys.argv)==2:
		print "creating",sys.argv[1]
		print createManagementIndex(sys.argv[1])
	elif len(sys.argv)==3:
		print "creating from",sys.argv[1],"to",sys.argv[2]
		fromDate='-'.join(sys.argv[1].split('-')[:3])
		toDate='-'.join(sys.argv[2].split('-')[:3])
		for iDate in generateDateRange(fromDate,toDate):
			indexName=iDate+'-mmgt'
			print createManagementIndex(indexName)

	print "finish"

